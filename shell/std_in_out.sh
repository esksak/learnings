# set -Cと>|（強制上書きリダイレクト）
# set -Cを実行すると、noclobber（誤消去防止）オプションが有効になり、
# 既存のファイルへのリダイレクトがエラーになる
# リダイレクトに>|を使うと、ばnoclobberオプションを無視して上書きする

touch /tmp/hello.log
set -C
echo "hello" > /tmp/hello.log # error file exists
echo "hello" >| /tmp/hello.log  # force overwrite

# <<と<<-を使ったその場での入力データの生成(ヒアドキュメント)
# program << delimiter（区切り文字）という記述を使うと、
# シェルスクリプトの中でprogramへの入力データを作成できる（here document）。
# 変数への参照は実際の値に置換され、コマンド展開や算術置換も行われるが、
# 区切り文字を''でくくると、コマンド展開や算術置換が行われない。
# <<の後にマイナス記号をつけると、ヒアドキュメント中の行頭のタブが無視される

# ファイル記述子
# 0,1,2がそれぞれ標準入力、標準出力、エラー出力に割り当てられている
# プロンプトは標準エラー出力

# エラーを捨てるとき
echo "test" > result 2> /dev/null

# 標準とエラーを同じファイルにアウトプットしたいとき
# &1が、１に割り当てられているデバイスという意味になる。
# execコマンドを使うとシェル自身の入出力に関する設定を変更できる。
echo "test" > result 2>&1
